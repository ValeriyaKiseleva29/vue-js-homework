{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.generateItems && $options.generateItems(...args)),\n    class: \"btn btn-danger mx-2 my-2 rounded\"\n  }, \"обновить список\"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.items, (item, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      style: _normalizeStyle(item.style)\n    }, _toDisplayString(item.text), 5 /* TEXT, STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","onClick","_cache","args","$options","generateItems","class","_Fragment","_renderList","$data","items","item","index","key","style","_normalizeStyle","text"],"sources":["C:\\Users\\admin\\Desktop\\js-homework\\vue-homework-4\\src\\components\\MyComponent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <button @click=\"generateItems\" class=\"btn btn-danger mx-2 my-2 rounded\">обновить список</button>\r\n      <ul>\r\n        <li v-for=\"(item, index) in items\" :key=\"index\" :style=\"item.style\">\r\n          {{item.text}}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'MyComponent',\r\n  data() {\r\n    return {\r\n      items: []\r\n    };\r\n  },\r\n  created() {\r\n    this.generateItems();\r\n  },\r\n  methods: {\r\n    generateItems() {\r\n      this.items = [];\r\n      for (let i = 0; i < 10; i++) {\r\n        const randomColor = this.getRandomColor();\r\n        const randomFontSize = this.getRandomFontSize();\r\n        this.items.push({\r\n          text: `Элемент ${i + 1}`,\r\n          style: {\r\n            backgroundColor: randomColor,\r\n            fontSize: randomFontSize + 'px'\r\n          }\r\n        });\r\n      }\r\n    },\r\n    getRandomColor() {\r\n      const letters = '0123456789ABCDEF';\r\n      let color = '#';\r\n      for (let i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n      }\r\n      return color;\r\n    },\r\n    getRandomFontSize() {\r\n      return Math.floor(Math.random() * 13) + 12;\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n<style>\r\n\r\n</style>"],"mappings":";;uBACEA,mBAAA,CASM,cARJC,mBAAA,CAOM,cANJA,mBAAA,CAAgG;IAAvFC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;IAAEG,KAAK,EAAC;KAAmC,iBAAe,GACvFN,mBAAA,CAIK,c,kBAHHD,mBAAA,CAEKQ,SAAA,QAPbC,WAAA,CAKoCC,KAAA,CAAAC,KAAK,EALzC,CAKoBC,IAAI,EAAEC,KAAK;yBAAvBb,mBAAA,CAEK;MAF+Bc,GAAG,EAAED,KAAK;MAAGE,KAAK,EAL9DC,eAAA,CAKgEJ,IAAI,CAACG,KAAK;wBAC9DH,IAAI,CAACK,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}