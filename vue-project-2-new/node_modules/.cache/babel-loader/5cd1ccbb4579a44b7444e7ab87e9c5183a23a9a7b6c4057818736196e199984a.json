{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  style: {\n    \"color\": \"red\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.toggleState && $setup.toggleState(...args))\n  }, \"Изменить состояние\"), _createElementVNode(\"p\", null, \"Текущее состояние: \" + _toDisplayString($setup.state), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.validateForm && $setup.validateForm(...args))\n  }, \"Проверить данные\"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.formData = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.formData]]), $setup.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, _toDisplayString($setup.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","style","_createElementBlock","_createElementVNode","onClick","_cache","args","$setup","toggleState","_toDisplayString","state","validateForm","type","$event","formData","errorMessage","_hoisted_1","_createCommentVNode"],"sources":["C:\\Users\\admin\\Desktop\\js-homework\\vue-project-2\\src\\components\\ToggleComponent.vue"],"sourcesContent":["<script>\r\nimport {ref} from \"vue\";\r\nexport default {\r\n  setup(){\r\n    const state = ref ('Начальное состояние');\r\n    const toggleState = () => {\r\n      state.value = state.value === 'Начальное состояние'\r\n          ? 'Состояние изменено'\r\n          : 'Начальное состояние';\r\n  };\r\n    const formData = ref ('');\r\n    const errorMessage = ref ('');\r\n    const validateForm = () => {\r\n      if (formData.value.trim() === ''){\r\n        errorMessage.value = 'Поле не может быть пустым';\r\n      } else if (formData.value.length < 5){\r\n        errorMessage.value = 'Длинна текста должна быть не меньше 5 символов';\r\n      } else {\r\n        errorMessage.value = '';\r\n        alert('Данные введены корректно');\r\n      }\r\n    };\r\n    const firstName = ('');\r\n    const lastName = ('');\r\n\r\n\r\n\r\n    return {\r\n      state,\r\n      toggleState,\r\n      errorMessage,\r\n      formData,\r\n      validateForm\r\n    };\r\n  }\r\n};\r\n\r\n</script>\r\n\r\n<template>\r\n<div>\r\n  <button @click=\"toggleState\">Изменить состояние</button>\r\n  <p>Текущее состояние: {{state}}</p>\r\n\r\n  <button @click=\"validateForm\">Проверить данные</button>\r\n  <input type=\"text\" v-model=\"formData\">\r\n  <p v-if=\"errorMessage\" style=\"color: red\">{{errorMessage}}</p>\r\n</div>\r\n</template>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":";;EAAAA,GAAA;EA8CyBC,KAAkB,EAAlB;IAAA;EAAA;;;uBANzBC,mBAAA,CAOM,cANJC,mBAAA,CAAwD;IAA/CC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,WAAA,IAAAD,MAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;KAAE,oBAAkB,GAC/CH,mBAAA,CAAmC,WAAhC,qBAAmB,GAAAM,gBAAA,CAAEF,MAAA,CAAAG,KAAK,kBAE7BP,mBAAA,CAAuD;IAA9CC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAI,YAAA,IAAAJ,MAAA,CAAAI,YAAA,IAAAL,IAAA,CAAY;KAAE,kBAAgB,G,gBAC9CH,mBAAA,CAAsC;IAA/BS,IAAI,EAAC,MAAM;IA7CpB,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IA6C8BN,MAAA,CAAAO,QAAQ,GAAAD,MAAA;iDAARN,MAAA,CAAAO,QAAQ,E,GAC3BP,MAAA,CAAAQ,YAAY,I,cAArBb,mBAAA,CAA8D,KAA9Dc,UAA8D,EAAAP,gBAAA,CAAlBF,MAAA,CAAAQ,YAAY,oBA9C1DE,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}