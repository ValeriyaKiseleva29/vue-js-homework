{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ToggleComponent = _resolveComponent(\"ToggleComponent\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, [_createVNode(_component_ToggleComponent), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.updateProperty && $setup.updateProperty(...args))\n  }, \"Поменять значение\"), _createElementVNode(\"p\", null, _toDisplayString($setup.myObject.property1), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.myObject.property2), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.changeMessage && $setup.changeMessage(...args))\n  }, \"Изменить сообщение\"), _createElementVNode(\"p\", null, _toDisplayString($setup.message), 1 /* TEXT */), _createElementVNode(\"input\", {\n    type: \"text\",\n    onInput: _cache[2] || (_cache[2] = (...args) => $setup.submitText && $setup.submitText(...args)),\n    placeholder: \"Введите текст\"\n  }, null, 32 /* NEED_HYDRATION */), _createElementVNode(\"p\", null, _toDisplayString($setup.userInput), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.filterItems && $setup.filterItems(...args))\n  }, \"Фильтровать эллементы\"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredItems, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id\n    }, _toDisplayString(item.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_createVNode","_component_ToggleComponent","onClick","_cache","args","$setup","updateProperty","_toDisplayString","myObject","property1","property2","changeMessage","message","type","onInput","submitText","placeholder","userInput","filterItems","_Fragment","_renderList","filteredItems","item","key","id","name"],"sources":["C:\\Users\\admin\\Desktop\\js-homework\\vue-project-2\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n<div>\n  <ToggleComponent/>\n<button @click=\"updateProperty\">Поменять значение</button>\n  <p>{{myObject.property1}}</p>\n  <p>{{myObject.property2}}</p>\n\n  <button @click=\"changeMessage\">Изменить сообщение</button>\n  <p>{{message}}</p>\n\n  <input type=\"text\" @input=\"submitText\" placeholder=\"Введите текст\">\n  <p>{{userInput}}</p>\n\n  <button @click=\"filterItems\">Фильтровать эллементы</button>\n  <ul>\n    <li v-for=\"item in filteredItems\" :key=\"item.id\">{{item.name}}</li>\n  </ul>\n</div>\n  </div>\n</template>\n\n<script>\nimport {reactive, ref} from \"vue\";\nimport ToggleComponent from \"@/components/ToggleComponent.vue\";\n export default {\n   components: {ToggleComponent},\n   setup(){\n     const myObject = reactive({\n       property1: 'Привет!',\n       property2: 42\n     });\n     const updateProperty = () => {\n       myObject.property1 = 'Пока!';\n       myObject.property2 = 100\n     };\n     const message = ref(\"Good morning!\");\n     const changeMessage = () => {\n       message.value = \"Goodbye!\"\n     };\n     let userInput = ref('');\n     const submitText = (event) => {\n       userInput.value = event.target.value;\n     };\n     const items = ref([\n       {id: 1, name: 'яблоко', type:'fruit' },\n       {id: 2, name: 'морковь', type:'vegateble' },\n       {id: 3, name: 'апельсин', type:'fruit' },\n       {id: 4, name: 'капуста', type:'vegateble' }\n\n     ]);\n        const filteredItems = ref(items.value);\n        const filterItems = () => {\n          filteredItems.value = items.value.filter((item) => item.type === 'fruit');\n        };\n\n     return{\n       myObject,\n       updateProperty,\n       message,\n       changeMessage,\n       submitText,\n       userInput,\n       filteredItems,\n       filterItems,\n       items\n     };\n   }\n };\n</script>\n\n<style>\n button{\n  background-color: lightpink;\n   color: black;\n  border-radius: 5px;\n}\n\n</style>\n"],"mappings":";;;uBACEA,mBAAA,CAkBM,cAjBRC,mBAAA,CAgBM,cAfJC,YAAA,CAAkBC,0BAAA,GACpBF,mBAAA,CAA0D;IAAjDG,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;KAAE,mBAAiB,GAC/CL,mBAAA,CAA6B,WAAAQ,gBAAA,CAAxBF,MAAA,CAAAG,QAAQ,CAACC,SAAS,kBACvBV,mBAAA,CAA6B,WAAAQ,gBAAA,CAAxBF,MAAA,CAAAG,QAAQ,CAACE,SAAS,kBAEvBX,mBAAA,CAA0D;IAAjDG,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAM,aAAA,IAAAN,MAAA,CAAAM,aAAA,IAAAP,IAAA,CAAa;KAAE,oBAAkB,GACjDL,mBAAA,CAAkB,WAAAQ,gBAAA,CAAbF,MAAA,CAAAO,OAAO,kBAEZb,mBAAA,CAAmE;IAA5Dc,IAAI,EAAC,MAAM;IAAEC,OAAK,EAAAX,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAU,UAAA,IAAAV,MAAA,CAAAU,UAAA,IAAAX,IAAA,CAAU;IAAEY,WAAW,EAAC;qCACnDjB,mBAAA,CAAoB,WAAAQ,gBAAA,CAAfF,MAAA,CAAAY,SAAS,kBAEdlB,mBAAA,CAA2D;IAAlDG,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAa,WAAA,IAAAb,MAAA,CAAAa,WAAA,IAAAd,IAAA,CAAW;KAAE,uBAAqB,GAClDL,mBAAA,CAEK,c,kBADHD,mBAAA,CAAmEqB,SAAA,QAhBvEC,WAAA,CAgBuBf,MAAA,CAAAgB,aAAa,EAArBC,IAAI;yBAAfxB,mBAAA,CAAmE;MAAhCyB,GAAG,EAAED,IAAI,CAACE;wBAAMF,IAAI,CAACG,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}