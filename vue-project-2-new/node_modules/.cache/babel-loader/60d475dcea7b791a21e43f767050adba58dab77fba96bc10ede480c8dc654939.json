{"ast":null,"code":"import { ref, computed } from \"vue\";\nexport default {\n  setup() {\n    const state = ref('Начальное состояние');\n    const toggleState = () => {\n      state.value = state.value === 'Начальное состояние' ? 'Состояние изменено' : 'Начальное состояние';\n    };\n    const formData = ref('');\n    const errorMessage = ref('');\n    const validateForm = () => {\n      if (formData.value.trim() === '') {\n        errorMessage.value = 'Поле не может быть пустым';\n      } else if (formData.value.length < 5) {\n        errorMessage.value = 'Длинна текста должна быть не меньше 5 символов';\n      } else {\n        errorMessage.value = '';\n        alert('Данные введены корректно');\n      }\n    };\n    const firstName = ref('Валерия');\n    const lastName = ref('Киселёва');\n    const fullName = computed(() => {\n      return `${firstName.value} ${lastName.value}`;\n    });\n    const users = ref([{\n      id: 1,\n      name: 'Валерия',\n      age: 29,\n      isActive: true\n    }, {\n      id: 2,\n      name: 'Роман',\n      age: 35,\n      isActive: false\n    }, {\n      id: 3,\n      name: 'Олег',\n      age: 30,\n      isActive: true\n    }, {\n      id: 4,\n      name: 'Катерина',\n      age: 23,\n      isActive: false\n    }, {\n      id: 5,\n      name: 'Ярослава',\n      age: 15,\n      isActive: true\n    }]);\n    return {\n      state,\n      toggleState,\n      errorMessage,\n      formData,\n      validateForm,\n      fullName,\n      firstName,\n      lastName\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","setup","state","toggleState","value","formData","errorMessage","validateForm","trim","length","alert","firstName","lastName","fullName","users","id","name","age","isActive"],"sources":["C:\\Users\\admin\\Desktop\\js-homework\\vue-project-2\\src\\components\\ToggleComponent.vue"],"sourcesContent":["<script>\r\nimport {ref, computed} from \"vue\";\r\nexport default {\r\n  setup(){\r\n    const state = ref ('Начальное состояние');\r\n    const toggleState = () => {\r\n      state.value = state.value === 'Начальное состояние'\r\n          ? 'Состояние изменено'\r\n          : 'Начальное состояние';\r\n  };\r\n    const formData = ref ('');\r\n    const errorMessage = ref ('');\r\n    const validateForm = () => {\r\n      if (formData.value.trim() === ''){\r\n        errorMessage.value = 'Поле не может быть пустым';\r\n      } else if (formData.value.length < 5){\r\n        errorMessage.value = 'Длинна текста должна быть не меньше 5 символов';\r\n      } else {\r\n        errorMessage.value = '';\r\n        alert('Данные введены корректно');\r\n      }\r\n    };\r\n    const firstName = ref('Валерия');\r\n    const lastName = ref('Киселёва');\r\n    const fullName = computed(() =>{\r\n      return `${firstName.value} ${lastName.value}`;\r\n    });\r\n    const users = ref([\r\n      {id: 1, name:'Валерия', age:29, isActive: true},\r\n      {id: 2, name:'Роман', age:35, isActive: false},\r\n      {id: 3, name:'Олег', age:30, isActive: true},\r\n      {id: 4, name:'Катерина', age:23, isActive: false},\r\n      {id: 5, name:'Ярослава', age:15, isActive: true},\r\n    ])\r\n\r\n\r\n\r\n    return {\r\n      state,\r\n      toggleState,\r\n      errorMessage,\r\n      formData,\r\n      validateForm,\r\n      fullName,\r\n      firstName,\r\n      lastName\r\n    };\r\n  }\r\n};\r\n\r\n</script>\r\n\r\n<template>\r\n<div>\r\n  <button @click=\"toggleState\">Изменить состояние</button>\r\n  <p>Текущее состояние: {{state}}</p>\r\n\r\n  <button @click=\"validateForm\">Проверить данные</button>\r\n  <input type=\"text\" v-model=\"formData\">\r\n  <p v-if=\"errorMessage\" style=\"color: red\">{{errorMessage}}</p>\r\n\r\n  <p>Имя: {{ firstName }}</p>\r\n  <p>Фамилия: {{ lastName }}</p>\r\n  <p>Полное имя: {{ fullName }}</p>\r\n</div>\r\n</template>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"AACA,SAAQA,GAAG,EAAEC,QAAQ,QAAO,KAAK;AACjC,eAAe;EACbC,KAAKA,CAAA,EAAE;IACL,MAAMC,KAAI,GAAIH,GAAE,CAAG,qBAAqB,CAAC;IACzC,MAAMI,WAAU,GAAIA,CAAA,KAAM;MACxBD,KAAK,CAACE,KAAI,GAAIF,KAAK,CAACE,KAAI,KAAM,qBAAoB,GAC5C,oBAAmB,GACnB,qBAAqB;IAC/B,CAAC;IACC,MAAMC,QAAO,GAAIN,GAAE,CAAG,EAAE,CAAC;IACzB,MAAMO,YAAW,GAAIP,GAAE,CAAG,EAAE,CAAC;IAC7B,MAAMQ,YAAW,GAAIA,CAAA,KAAM;MACzB,IAAIF,QAAQ,CAACD,KAAK,CAACI,IAAI,CAAC,MAAM,EAAE,EAAC;QAC/BF,YAAY,CAACF,KAAI,GAAI,2BAA2B;MAClD,OAAO,IAAIC,QAAQ,CAACD,KAAK,CAACK,MAAK,GAAI,CAAC,EAAC;QACnCH,YAAY,CAACF,KAAI,GAAI,gDAAgD;MACvE,OAAO;QACLE,YAAY,CAACF,KAAI,GAAI,EAAE;QACvBM,KAAK,CAAC,0BAA0B,CAAC;MACnC;IACF,CAAC;IACD,MAAMC,SAAQ,GAAIZ,GAAG,CAAC,SAAS,CAAC;IAChC,MAAMa,QAAO,GAAIb,GAAG,CAAC,UAAU,CAAC;IAChC,MAAMc,QAAO,GAAIb,QAAQ,CAAC,MAAK;MAC7B,OAAO,GAAGW,SAAS,CAACP,KAAK,IAAIQ,QAAQ,CAACR,KAAK,EAAE;IAC/C,CAAC,CAAC;IACF,MAAMU,KAAI,GAAIf,GAAG,CAAC,CAChB;MAACgB,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAC,SAAS;MAAEC,GAAG,EAAC,EAAE;MAAEC,QAAQ,EAAE;IAAI,CAAC,EAC/C;MAACH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAC,OAAO;MAAEC,GAAG,EAAC,EAAE;MAAEC,QAAQ,EAAE;IAAK,CAAC,EAC9C;MAACH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAC,MAAM;MAAEC,GAAG,EAAC,EAAE;MAAEC,QAAQ,EAAE;IAAI,CAAC,EAC5C;MAACH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAC,UAAU;MAAEC,GAAG,EAAC,EAAE;MAAEC,QAAQ,EAAE;IAAK,CAAC,EACjD;MAACH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAC,UAAU;MAAEC,GAAG,EAAC,EAAE;MAAEC,QAAQ,EAAE;IAAI,CAAC,CACjD;IAID,OAAO;MACLhB,KAAK;MACLC,WAAW;MACXG,YAAY;MACZD,QAAQ;MACRE,YAAY;MACZM,QAAQ;MACRF,SAAS;MACTC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}